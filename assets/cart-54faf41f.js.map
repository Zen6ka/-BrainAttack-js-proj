{"version":3,"file":"cart-54faf41f.js","sources":["../../src/js/cart.js"],"sourcesContent":["const cartItemsQuantitu = document.querySelector(\".js-cart-items-quantity\"); // Місце де буде оновлюватись кількість товарів в кошику\nconst cartEmpty = document.querySelector(\".js-cart-empty\");\nconst cartContainer = document.querySelector(\".js-cart-container\");\nconst deleteAllBtn = document.querySelector('.js-delete-all-btn');\nconst cartSelectedProducts = document.querySelector(\".js-cart-selected-products\");\nconst cartOrderDetails = document.querySelector(\".js-cart-order-details\");\nconst totalOrderedPrice = document.querySelector(\".js-total-ordered-price\");\nconst form = document.querySelector(\".js-email-form\");\nconst btnCheckout = document.querySelector(\".js-email-checkout\");\n\n\n\n\n\nconsole.log(\"sdsd\");\n// За замовчуванням сторінка кошика буде пустою.\n// cartEmptyHidden();\n// cartContainerHidden();\n\n\n\n// ФУНКЦІЯ ПЕРЕВІРКИ ЛОКАЛЬНОГО СХОВИЩА НА ВМІСТ ДАНИХ\nfunction localStorageCheck() { // ****** ізніше підшаманити, щоб просто повертати результат сховище, а логіку відпрацьовувати далі поза функцією.\n  const savedProducts = localStorage.getItem(\"cart-products\");\n  const parsedSavedProducts = JSON.parse(savedProducts);\n\n  cartItemsQuantitu.innerHTML = parsedSavedProducts.length;\n\n  const { name, img, category, size, price } = parsedSavedProducts; // повинен повертатись об`єкт за запитом до сховища. Тому одразу роблю його деструктуризацію, щоб потім відмальовувати розмітку.\n\n  // метод редюс буде рахувати мені суму цін за всі продукти. Потім цей результат я буду передавати в Тотал під час перевірки.\n//   const sumPrice = parsedSavedProducts.reduce((acc, currentProduct)=>{\n// return acc + currentPrice.price;\n//   }  , 0) \n\n\n  if (savedProducts.length === 0) {\n    // або пустий масив/об`єкт null/undefined (потім подивитись що повертається і підкорегувати логіку)\n    // ТОДІ виклик функції яка покаже нашу порожню розмітку і приховає розмітку товарів.\n// cartEmptyShow();\n// cartContainerHidden();\n  } else {\n    // Якщо масив не порожній, тоді приховуємо розмітку порожнього масиву і показужмо розмітку товарів.\n//     cartEmptyHidden();\n// cartContainerShow();\n\n    //     // виклик функції з відмалюванням даних продукту i передача її результату в дівчик\n    //     const productMarkup = cartSelectedProducts();\n    //     cartSelectedProducts.innerHTML = productMarkup;\n    //Реалізую переший варіант і просто буду показувати або приховувати цей блок в залежності від результату ( і буду викликати функцію показу (треба її ще написати))\n    // // виклик функції з відмальовуванням даних замовлення і передача її результату в дівчик\n    // const detailsMarkup = orderDetailsMarkup ();\n    // cartOrderDetails.innerHTML = detailsMarkup;\n\n\n// передаємо суму цін в Тотал\n    // totalOrderedPrice.innerHTML = `$${sumPrice}`;\n\n    // Слухач на форму по сабміту а ще треба буде по кліку на кнопку\nform.addEventListener('submit', (event) => {\n    event.preventDefault();\n})\n  }\n}\n\n\n\ndeleteAllBtn.addEventListener('click', removeLocalStorage);\n// ФУНКЦІЯ ОЧИЩЕННЯ СХОВИЩА ВІД ВСІХ ПРОДУКТІВ\nfunction removeLocalStorage(event){\n    event.preventDefault();\n    localStorage.removeItem('cart-products'); // очищую сховище\n    cartSelectedProducts.innerHTML = \"\";\n    cartContainerHidden(); // приховую контейнер кошика\n                           // показую пустий кошик\n\n}\n\n\n// ФУНКЦІЯ ВІДМАЛЬОВУВАННЯ ОБРАНИХ ТОВАРІВ\nfunction selectedProductsMarkup(\n  productName,\n  productImg,\n  productCategory,\n  productSize,\n  productPrice\n) {\n  return `\n<div class=\"selected-item\">\n    <button>X</button>\n    <div class=\"js-selected-item-img\"><img src=\"${productImg}\" alt=\"\"></div>\n    <div class=\"js-selected-item-descroption\">\n        <h3>${productName}</h3>\n        <p>Category: ${productCategory} Size: ${productSize}</p>\n        <h3>$${productPrice}</h3>\n    </div>\n</div>\n`\n}\n\n// На разі закую її просто в розмітку і буду приховувати або показувати в залежності від результату\n// // ФУНКЦІЯ ВІДМАЛЬОВУВАННЯ ДЕТАЛЕЙ ЗАМОВЛЕННЯ\n// function orderDetailsMarkup (totalPrice) { // в totalPrice буде передватись результат редьюсу який я вирахую пізніше.\n// return `\n// <h2><b>YOUR ORDER</b></h2>\n// <div>\n// <h3><b>Total</b></h3>\n// <p>Sum: <h2>$${totalPrice}</h2></p>\n// </div>\n// <input type=\"text\" placeholder=\"Mail: Enter your email\" pattern=\"[a-zA-Z0-9\\-.]+\">\n// <button type=\"submit\">Checkout</button>\n// `\n// }\n\n// функції помічники які будуть викликатись навзаєм в залежності від того чи в локальному сховищі щось є\n\n// ФУНКЦІЯ ПОКАЗУ ПОРОЖНЬОГО КОШИКА - EMPTY\nfunction cartEmptyShow () {\n    cartEmpty.style.display = 'block';\n}\n// ФУНКЦІЯ ПРИХОВУВАННЯ ПОРОЖНЬОГО КОШИКА - EMPTY\nfunction cartEmptyHidden () {\n    cartEmpty.style.display = 'none';\n}\n\n\n// ФУНКЦІЯ ПОКАЗУ ПОРОЖНЬОГО КОНТЕЙНЕРУ\nfunction cartContainerShow () {\n    cartContainer.style.display = 'block';\n}\n// ФУНКЦІЯ Приховування ПОРОЖНЬОГО КОНТЕЙНЕРУ\n// --------- буду викликати функцію яка приховує вміст коли отриманий результат запиту буде не порожнім\nfunction cartContainerHidden () {\n    cartContainer.style.display = 'none';\n}\n\n\n// НА РАЗІ ЦЕ НЕ ПОТРІБНО БО МИ БУДЕМО ПРИХОВУВАТИ УВЕСЬ КОНТЕЙНЕР\n// // ФУНКЦІЯ ПРИХОВУВАННЯ ДЕТАЛЕЙ ЗАМОВЛЕННЯ\n// function orderDetailsHidden() {\n//   cartOrderDetails.style.display = \"none\";\n// }\n// // ФУНКЦІЯ ПОКАЗУ ДЕТАЛЕЙ ЗАМОВЛЕННЯ\n// function orderDetailsShow() {\n//   cartOrderDetails.style.display = \"block\";\n// }\n\nconsole.log(\"qwewqe\");\n"],"names":["cartContainer","deleteAllBtn","cartSelectedProducts","removeLocalStorage","event","cartContainerHidden"],"mappings":"ssBAA0B,SAAS,cAAc,yBAAyB,EACxD,SAAS,cAAc,gBAAgB,EACzD,MAAMA,EAAgB,SAAS,cAAc,oBAAoB,EAC3DC,EAAe,SAAS,cAAc,oBAAoB,EAC1DC,EAAuB,SAAS,cAAc,4BAA4B,EACvD,SAAS,cAAc,wBAAwB,EAC9C,SAAS,cAAc,yBAAyB,EAC7D,SAAS,cAAc,gBAAgB,EAChC,SAAS,cAAc,oBAAoB,EAM/D,QAAQ,IAAI,MAAM,EAqDlBD,EAAa,iBAAiB,QAASE,CAAkB,EAEzD,SAASA,EAAmBC,EAAM,CAC9BA,EAAM,eAAc,EACpB,aAAa,WAAW,eAAe,EACvCF,EAAqB,UAAY,GACjCG,GAGJ,CAwDA,SAASA,GAAuB,CAC5BL,EAAc,MAAM,QAAU,MAClC,CAaA,QAAQ,IAAI,QAAQ"}