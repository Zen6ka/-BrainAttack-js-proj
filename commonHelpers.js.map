{"version":3,"file":"commonHelpers.js","sources":["../src/js/cart.js"],"sourcesContent":["// import axios from 'axios';\n// import { onCloseModal, onOpenOrderedModal, onCheckoutButtonClick,  onBackdropClick,  onCloseByEsc,  isModalOpen,  toggleBodyScroll } from \"./modal.js\";\n\nimport {localStorageCheckCart} from './header.js'\nimport './footer.js';\nimport './header.js'\n\nimport spriteIcons from '../img/icons.svg';\nconsole.log(spriteIcons)\n\nconst cartItemsQuantity = document.querySelector(\".js-cart-items-quantity\"); // Місце де буде оновлюватись кількість товарів в кошику\nconst cartEmpty = document.querySelector(\".js-cart-empty\");\nconst cartContainer = document.querySelector(\".js-cart-container\");\nconst deleteAllBtn = document.querySelector('.js-delete-all-btn');\nconst cartSelectedProducts = document.querySelector(\".js-cart-selected-products\");\nconst cartOrderDetails = document.querySelector(\".js-cart-order-details\");\nconst totalOrderedPrice = document.querySelector(\".js-total-ordered-price\");\nconst form = document.querySelector(\".js-email-form\");\n// const btnCheckout = document.querySelector(\".js-email-checkout\");\nconst input = document.querySelector(\".cart-input\")\n\n\nlet conterProduct = 1;\n\nconsole.log(\"Test start\");\n// За замовчуванням сторінка кошика буде пустою.\ncartEmptyHidden();\ncartContainerHidden();\n\n\n// ФУНКЦІЯ ПЕРЕВІРКИ ЛОКАЛЬНОГО СХОВИЩА НА ВМІСТ ДАНИХ\nfunction localStorageCheck() { // ****** пізніше підшаманити, щоб просто повертати результат сховище, а логіку відпрацьовувати далі поза функцією.\n  const savedProducts = localStorage.getItem(\"cart\");\n  return   JSON.parse(savedProducts); //повертаю розпарсені дані з ЛС або null якщо там нічого не має\n}  // savedProducts ?   : null\n\nconst parsedSavedProducts = localStorageCheck(); // результат повернення передаю змінній Розпарсених даних\nconsole.log(parsedSavedProducts) // Масив всіх об`єктів з ЛС за ключем cart\n\n\n// Основна логіка запиту\nconst uniqProducts = uniqProductsArray(parsedSavedProducts); // Ортримані дані зі сховища фільтрую на унікальність і присвоюю новій змінній відфільрований масив \ncartItemsQuantity.innerHTML = uniqProducts.length; // після чого одразу записую на сторінці кількість товарів в кошику\nlocalStorageCheckCart(); // Перевіряю і відмальовую кількість товарів у хедері. \n  // const { _id, name, img, category, size, price } = uniqProducts; // повинен повертатись об`єкт за запитом до сховища. Тому одразу роблю його деструктуризацію, щоб потім відмальовувати розмітку.\n  \n// Повернення масиву об`єктів і відмальовування їх\n  const productsArrayMarkup = uniqProducts.map(el => {\n    return selectedProductsMarkup(el._id, el.name, el.img, el.category, el.size, el.price) \n  }).join('');\n \n  cartSelectedProducts.innerHTML = productsArrayMarkup;// відмальовую отриманий результат на сторінці\n   totalSumMarkup(uniqProducts); // Також одразу рахую суму та відмальовую її на сторінці (все це виконує функція, тому я просто її викликаю передаючи наш масив унікальних об`єктів)\n\n\n/// слухач на форму форму продуктів які ми отримали з ЛС\n  cartSelectedProducts.addEventListener('click', deleterProduct);\n\n\n  \n// Функція перевірки об`єктів в масиві отриманого зі сховища і повернення лише унікальних значень. \nfunction uniqProductsArray (baseArray) {\n  if((baseArray === null || baseArray.length < 1)){\n    cartItemsQuantity.innerHTML = '0';\n    cartEmptyShow();\n  cartContainerHidden();\n  console.log('Error array')\n  return [];\n  }\n\n  cartEmptyHidden();\n  cartContainerShow();\n\nconst seen = new Set(); // Створюємо пустий Set для відстеження унікальних значень\nconst uniqueProductsArray = parsedSavedProducts.filter(obj => {\n  const value = obj._id; // В нашому прикладі вибираємо значення \"id\" для порівняння унікальності\n  if (seen.has(value)) {\n    return false; // Значення вже було, це не унікальний об'єкт\n  }\n  seen.add(value); // Додаємо значення до Set, оскільки це унікальне\n  return true; // Об'єкт є унікальним і буде включений до результату\n});\n\nconsole.log(uniqueProductsArray); //  Масив унікальних об`єктів з ЛС за ключем cart\n\nreturn uniqueProductsArray;\n}\n\n\n\n    // ФУНКЦІЯ ВИДАЛЕННЯ ПРОДУКТУ З НАШОГО ПЕРЕЛІКУ \n    function deleterProduct (event) {\n      const currentElementId = event.target.closest('[id]');\n      const actualId = currentElementId ? currentElementId.id : null;\n      \nconsole.log(actualId)\n\n            if (event.target.closest('.cart-remove-product-btn')) {\n              let cart = localStorageCheck();\n\n              const refreshedArray = cart.filter(product => product._id !== actualId);\n console.log(refreshedArray)\n\n              if (refreshedArray.length > 0) {\n                           localStorage.setItem('cart', JSON.stringify(refreshedArray));\n\n                const refreshedMarkup = localStorageCheck().map(el => {\n                  return selectedProductsMarkup(el._id, el.name, el.img, el.category, el.size, el.price) \n                  // return selectedProductsMarkup(el._id, el.Productame, el.ProductImg, el.ProductCategory, el.ProductSize, el.ProductPrice) -або так\n                }).join('');\n                  \n\n                 cartSelectedProducts.innerHTML = refreshedMarkup;\n\n\n                 totalSumMarkup(refreshedArray);\n                 cartItemsQuantity.innerHTML = refreshedArray.length;\n\n              } else {\n              localStorage.removeItem('cart');\n\n              cartItemsQuantity.innerHTML = '0';\n              cartSelectedProducts.innerHTML = \"\";\n              cartEmptyShow();\n              cartContainerHidden();\n            }\n             } \n            return\n           \n      }\n\n\n\n    // Слухач на форму по сабміту а ще треба буде по кліку на кнопку\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n  const email = input.value;\n\n  console.log(`Ordered by: ${email}`)\nconsole.log('Submit successful')\n\n//  відкриття модалки про успішні закупи при сабміті\nonCheckoutButtonClick()\n\n  // після сабміту замовлення можемо видалити дані зі сховища та приховати ---------AЛЕ Я ЦЕ ДОДАВ У ФУНКЦІЮ ЗАКРИТТЯ, \n  //ЩОБ ВОНО ПЕРЕМАЛЬОВУВАЛОСЬ КОЛИ МОДАЛКА ЗНИКАЄ\n  // cartEmptyShow();\n  // cartContainerHidden();\n  // cartItemsQuantity.innerHTML = '0';\n  // cartSelectedProducts.innerHTML = \"\";\n\n  localStorage.removeItem('cart'); // Видаяю ключ зі сховища\n\n  form.reset(); // Очищую форму\n})\n\n\n\n// Слухач на кнопку видалення всього\ndeleteAllBtn.addEventListener('click', removeLocalStorage);\n// ФУНКЦІЯ ОЧИЩЕННЯ СХОВИЩА ВІД ВСІХ ПРОДУКТІВ\nfunction removeLocalStorage(event){\n    event.preventDefault();\n    localStorage.removeItem('cart'); // очищую сховище (за моїм ключем)\n    // localStorage.clear(); - або все очистити \n    cartSelectedProducts.innerHTML = \"\";\n    cartContainerHidden(); // приховую контейнер кошика\n    cartEmptyShow();             // показую пустий кошик\n// cartEmptyHidden();\n// cartContainerHidden();\ncartItemsQuantity.innerHTML = '0';\n}\n\n\n\n\n// //ФУНКЦІЯ ПІДРАХУНКУ СУМИ i РЕНДЕРУ ЇЇ В HTML (Використовується і в додатковому функціоналі також)\nfunction totalSumMarkup (array) {\n  // Для додаткового функціоналу: Перевірка чи елементи масиву який предаються є числом:\n  const arrayCheck = array.every(element => typeof element === 'number');\n  console.log(arrayCheck)\n  \n  if (arrayCheck) { // Якщо так, тоді виконується підрахунок і відмальовка за Додатковим функціоналом, а якщо ні, тоді за базовим (через об`єкт)\n    console.log(arrayCheck)\n  // метод редюс буде рахувати мені суму цін за всі продукти. Потім цей результат я буду передавати в Тотал під час перевірки.\n\n    const sumPrice = array.reduce((acc, currentProduct)=>{\n      return acc + currentProduct; //порахував ціну\n        }, 0).toFixed(2); //заокруглив до сотих\n  \n      totalOrderedPrice.innerHTML = `$${sumPrice}`; // відмалював\n\n  } else { // повторюємо те ж саме, але для об`єкту\n\n    const sumPrice = array.reduce((acc, currentProduct)=>{\n      return acc + currentProduct.price;\n        }, 0).toFixed(2);\n  \n      totalOrderedPrice.innerHTML = `$${sumPrice}`;\n    }\n  \n}\n\n\n\n\n\n\n// ФУНКЦІЯ ВІДМАЛЬОВУВАННЯ ОБРАНИХ ТОВАРІВ\nfunction selectedProductsMarkup(\n  productId,\n  productName,\n  productImg,\n  productCategory,\n  productSize,\n  productPrice,\n) {\n\n  return `\n<div class=\"selected-item\" id=\"${productId}\">\n    <button class=\"cart-remove-product-btn\"><svg class=\"js-delete-product-icon\"><use href='${spriteIcons}#icon-ion_close-sharp'></use></svg></button>\n    <div class=\"js-selected-item-img\"><img class='js-product-item-img' src=\"${productImg}\" alt=\"Product\"></div>\n    <div class=\"js-selected-item-description\">\n        <p class=\"js-item-product-name\">${productName}</p>\n<div class=\"js-item-description-section\">\n        <p class=\"js-item-product-properties\">Category: <span class=\"js-item-product-descr\">${productCategory}</span> </p> <p class=\"js-item-product-properties\">Size: <span class=\"js-item-product-descr\">${productSize}</span></p>\n        </div>\n        <div class=\"js-price-count-section\"><p data-price=\"${productPrice}\" class=\"js-item-product-price\">$<span class=\"js-price-value\">${productPrice}</span></p>\n        <div class=\"js-counter-section\">\n        <button type=\"button\" class=\"btn-count-minus\">-</button>\n        <p class=\"count-product\">${conterProduct}</p>\n       \n        <button type=\"button\" class=\"btn-count-plus\">+</button>\n        </div>\n        </div>\n    </div>\n</div>\n<p class=\"underline\"></p>\n`\n}\n\n\n\n\n\n// функції помічники які будуть викликатись навзаєм в залежності від того чи в локальному сховищі щось є\n\n// ФУНКЦІЯ ПОКАЗУ ПОРОЖНЬОГО КОШИКА - EMPTY\nfunction cartEmptyShow () {\n    cartEmpty.style.display = 'flex';\n}\n// ФУНКЦІЯ ПРИХОВУВАННЯ ПОРОЖНЬОГО КОШИКА - EMPTY\nfunction cartEmptyHidden () {\n    cartEmpty.style.display = 'none';\n}\n\n\n// ФУНКЦІЯ ПОКАЗУ ПОРОЖНЬОГО КОНТЕЙНЕРУ\nfunction cartContainerShow () {\n    cartContainer.style.display = 'flex';\n}\n// ФУНКЦІЯ Приховування ПОРОЖНЬОГО КОНТЕЙНЕРУ\n// --------- буду викликати функцію яка приховує вміст коли отриманий результат запиту буде не порожнім\nfunction cartContainerHidden () {\n    cartContainer.style.display = 'none';\n}\n\nconsole.log(\"Test end\");\n\n\n\n\n// МОДАЛЬНІ ПОМІЧНИЧКИ\n\nfunction onCheckoutButtonClick() {\n  onOpenOrderedModal();\n}\n\n async function onOpenOrderedModal() {\n  window.addEventListener('keydown', onCloseByEsc);\n  document.body.classList.add('show-ordered-modal');\n  toggleBodyScroll();\n  document.querySelector('.js-backdrop-ordered').addEventListener('click', onBackdropClick);\n  document.querySelector('[data-action=\"close-modal-cart\"]').addEventListener('click', onCloseByClick)\n}\n// Закритя модального вікна по Esc\nfunction onCloseByEsc(event) {\n  if (event.code === 'Escape') {\n    onCloseModalCart();\n  }\n}\n// Закриття модального вікна натисканням кнопки\nfunction onCloseByClick () {\n      onCloseModalCart();\n }   \n\n// Закритя модального вікна\n function onCloseModalCart() {\n  // Зняв слухач\n  window.removeEventListener('keydown', onCloseByEsc);\n  document.body.classList.remove('show-ordered-modal');\n  document.querySelector('.js-backdrop-ordered').removeEventListener('click', onBackdropClick);\n  document.querySelector('[data-action=\"close-modal-cart\"]').removeEventListener('click', onCloseByClick);\n  toggleBodyScroll();\n\n  cartEmptyShow(); // Коли закривється тоді приховую конейнер і показую пороженій кошик\n  cartContainerHidden();\n\n  cartItemsQuantity.innerHTML = '0';\n  cartSelectedProducts.innerHTML = \"\";\n console.log('closed')\n}\n\n// Закритя модального вікна по кліку за модалку (на темний фон)\n function onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    onCloseModalCart();\n  }\n}\n\n\n function isModalOpen() {\n  return document.body.classList.contains('show-modal');\n}\n\n function toggleBodyScroll() {\n  document.body.style.overflow = isModalOpen() ? 'hidden' : '';\n}\n\n\n\n\n\n\n\n\n\n/////////////////// Додатковий функціонал /////////////////////////////////\n\n\n\n\nconst buttonMinus = document.querySelector('.btn-count-minus');\nconst buttonPlus = document.querySelector('.btn-count-plus');\nconst countValue = document.querySelector('.count-product')\nconst itemProductPrice = document.querySelector('.js-price-value')\nconst itemAllProductsPrice = document.querySelectorAll('.js-price-value');\n\n\n\n// СЛУХАЧ ДЛЯ ДОДАВАННЯ ТОВАРІВ ЗА КНОПКОЮ\nbuttonPlus.addEventListener('click', couterIncrease);\n\n// ФУНКЦІЯ ДЛЯ ДОДАВАННЯ КІЛЬКОСТІ ТОВАРІВ\nfunction couterIncrease () {\n  conterProduct = conterProduct +=1;\n  countValue.textContent = conterProduct;\n\n  const itemPrice = document.querySelector('[data-price]');\n  const dataPriceProduct = itemPrice.dataset.price  * conterProduct;\n console.log(dataPriceProduct)\n productPriceRender(dataPriceProduct); //Перемальовую ціну за один товар\nconst productPriceValue = productPriceValueArray();\ntotalSumMarkup(productPriceValue);\nproductPriceRender(dataPriceProduct);\n};\n\n// СЛУХАЧ ДЛЯ ВІДНІМАННЯ ТОВАРІВ ЗА КНОПКОЮ\nbuttonMinus.addEventListener('click', conterDecrease);\n\n//ФУНКЦІЯ ДЛЯ ВІДНІМАННЯ КІЛЬКОСТІ ТОВАРІВ\nfunction conterDecrease () {\n  console.log(conterProduct)\n  const itemPrice = document.querySelector('[data-price]');\nlet dataPriceProduct = itemPrice.dataset.price  * conterProduct;\nconsole.log(dataPriceProduct);\n\n  if (conterProduct <= 1) {\n       return;\n      } else {\n        conterProduct = conterProduct -=1;\n        countValue.textContent = conterProduct;\n        dataPriceProduct = itemPrice.dataset.price  * conterProduct;\n        console.log(dataPriceProduct)\n        productPriceRender(dataPriceProduct); //Перемальовую ціну за один товар\n        \n        const productPriceValue = productPriceValueArray();\n        console.log(productPriceValue);\n        totalSumMarkup(productPriceValue);\n        productPriceRender(dataPriceProduct);\n      }\n    }\n\n\n    //Функція перемальовки ціни за одиницю продукту\nfunction productPriceRender (amount){\n  itemProductPrice.innerHTML = `${amount}`;\n}\n\n\n\n//ФУНКЦІЯ ПОВЕРНЕННЯ ЕЛЕМЕНТІВ З DOM-ДЕРЕВА ЗА КЛАСОМ ПЕРЕДАНИМ В ЗМІННУ itemAllProductsPrice\nfunction productPriceValueArray() {\nconst productPricesArray = Array.from(itemAllProductsPrice).map(el => { // приводжу мої елемени до масиву.\n  return Number(el.textContent); // проганяю через map дістаючи їх вміст (через textContent) приводячи одразу до числа\n});\nconsole.log(productPricesArray);\nreturn productPricesArray; //Повертаю новостворений масив\n}\n\n"],"names":["spriteIcons","cartItemsQuantity","cartEmpty","cartContainer","deleteAllBtn","cartSelectedProducts","totalOrderedPrice","form","input","conterProduct","cartEmptyHidden","cartContainerHidden","localStorageCheck","savedProducts","parsedSavedProducts","uniqProducts","uniqProductsArray","localStorageCheckCart","productsArrayMarkup","el","selectedProductsMarkup","totalSumMarkup","deleterProduct","baseArray","cartEmptyShow","cartContainerShow","seen","uniqueProductsArray","obj","value","event","currentElementId","actualId","refreshedArray","product","refreshedMarkup","email","onCheckoutButtonClick","removeLocalStorage","array","arrayCheck","element","sumPrice","acc","currentProduct","productId","productName","productImg","productCategory","productSize","productPrice","onOpenOrderedModal","onCloseByEsc","toggleBodyScroll","onBackdropClick","onCloseByClick","onCloseModalCart","isModalOpen","buttonMinus","buttonPlus","countValue","itemProductPrice","itemAllProductsPrice","couterIncrease","dataPriceProduct","productPriceRender","productPriceValue","productPriceValueArray","conterDecrease","itemPrice","amount","productPricesArray"],"mappings":"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"}